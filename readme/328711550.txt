This repository contains an automatic parallel parking system including path planning, path tracking, and parallel parking in a designed environment written in python.
run the code using this command:
you can choose the parking spot from 1 to 24:

Our first step to develop an auto park system was to design and develop an environment capable of giving visual render using OpenCV library. Environment is implemented in environment.py as a class and recieves obstacles at the beginning env = Environment(obs). Agent can be placed using env.render(x,y,angle). A sample of environment is displayed bellow.

The agent will find a path from start to its goal using A*. This implementation of A* from PythonRobotics, considers parameters like obstacles and robot radius.
After finding a path in a descrete 100*100 space, the path is smoothed and scaled to 1000*1000 space of environment using b-spline. The result is a set of points to guide our agent!
Kinematic model of the car, is:
State vector is:
x: x-position, y: y-position, v: velocity, φ: yaw angle
Input vector is:
a: accellation, δ: steering angle
The MPC controller controls vehicle speed and steering based on the model and car is directed through the path.
This part consists of 4 rules that agent must choose one according to parking position. At first the agent will find a path to park position then it will compute the arriving angle. Based on the arriving angle, agent chooses a coordinate as ensure1. After that, parking path is planned from ensure1 to ensure2 using 2 circle equations as mentioned below. MPC controls the agent and car parks in ensure2 coordinate.

Team Pandas, have won 1st place in the National Rahneshan competition 2020 for autonomous vehicles. This contest has been one of the most competitive and challenging contests in the Rahneshan tournaments with more than 10 teams competing from top universities in Iran.

Automatic Parallel Parking : Path Planning, Path Tracking & Control
Envroinment
Path planning
Path tracking
Parallel parking
About us
A* algorithm
interpolating path with b-spline
