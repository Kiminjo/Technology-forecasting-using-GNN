This is our capstone project result of Udacity self-driving car nanodegree (CarND) term 3. It's required to team up to implement a self-driving car system including perception, planning and control modules. It's first tested using Udacity simulater and then actually runs on Udacity self-driving car, Carla ! For more information about the project, see the project introduction here.

The following demonstrates test results using Udacity simulator:
Udacity self-driving car nanodegree (CarND) :
-driving-car-engineer-nanodegree--nd013
Udacity simulator of this project :
-Capstone/releases

The whole systems can be divided into perception, planning, control system and car/simulater. Besides modules provided by Udacity, we implemented waypoint updater, traffic light detection and DBW node as indicated in the above image.
It sets a series of look-ahead waypoints starting from current vehicle position for drive-by-wire module to follow. This module generates different waypoints based on traffic light detection results (green, yellow or red light).
In red light case, the car will decelerate gradually to 1 kph starting from current velocity within 10 ~ 40 mile before traffic light. Otherwise, it will keep stop. In yellow or green light case, the car will accelerate and then keep the target velocity (default 20kph).
Overall, the car will follow waypoints and try to keep constant target velocity. When seeing red light in front, it will decelerate gradually and finally stop in front of traffic light.
SSD Mobile net is used for detecting traffic light. Both images from simulater and real life images are trained and fine tuned, respectively.
For throttle control, it uses PID controller. Parameters are set by trial and error based on different velocity.
Please use one of the two installation options, either native or docker installation.
Be sure that your workstation is running Ubuntu 16.04 Xenial Xerus or Ubuntu 14.04 Trusty Tahir. Ubuntu downloads can be found here.
If using a Virtual Machine to install Ubuntu, use the following configuration as minimum:
The Udacity provided virtual machine has ROS and Dataspeed DBW already installed, so you can skip the next two steps if you are using this.
Follow these instructions to install ROS
Dataspeed DBW
Download the Udacity Simulator.
Install Docker
Build the docker container
Run the docker file
To set up port forwarding, please refer to the instructions from term 2
Udacity self-driving car nanodegree (CarND) :
-driving-car-engineer-nanodegree--nd013
Udacity simulator of this project :
-Capstone/releases
Be sure that your workstation is running Ubuntu 16.04 Xenial Xerus or Ubuntu 14.04 Trusty Tahir. Ubuntu downloads can be found here.
If using a Virtual Machine to install Ubuntu, use the following configuration as minimum:
2 CPU
2 GB system memory
25 GB of free hard drive space
The Udacity provided virtual machine has ROS and Dataspeed DBW already installed, so you can skip the next two steps if you are using this.
Follow these instructions to install ROS
ROS Kinetic if you have Ubuntu 16.04.
ROS Indigo if you have Ubuntu 14.04.
Dataspeed DBW
Use this option to install the SDK on a workstation that already has ROS installed: One Line SDK Install (binary)
Download the Udacity Simulator.
2 CPU
2 GB system memory
25 GB of free hard drive space
ROS Kinetic if you have Ubuntu 16.04.
ROS Indigo if you have Ubuntu 14.04.
Use this option to install the SDK on a workstation that already has ROS installed: One Line SDK Install (binary)
CarND3 Programming a Real Self-Driving Car
Description
Team Members
System Architecture
Setup
Waypoint Updater
Traffic Light Detection
DBW (Drive-by-wire) Node
Native Installation
Docker Installation
Port Forwarding
Usage
Real world testing
